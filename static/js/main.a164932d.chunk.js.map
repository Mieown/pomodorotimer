{"version":3,"sources":["App.js","index.js"],"names":["App","useState","second","setSecond","minute","setMinute","isActive","setIsActive","counter","setCounter","header","setHeader","background","setBackground","ResetTimer","useEffect","intervalId","setInterval","secondCounter","parseInt","minuteCounter","computedSecond","String","length","computedMinute","clearInterval","className","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA4FeA,EAzFH,WAEZ,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,mBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA4BR,mBAAS,wBAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAAoCV,oBAAS,GAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KAEA,SAASC,IACPX,EAAU,MACVE,EAAU,MACVI,EAAW,GACXF,GAAY,GACZI,EAAU,wBACVE,GAAc,GAuDd,OA3CAE,qBAAU,WACR,IAAIC,EAsCJ,OApCIV,IACFU,EAAaC,aAAY,WAEvB,IAAIC,EAAgBC,SAASjB,GACzBkB,EAAgBD,SAASf,GAE7B,GAAqB,GAAjBc,GAAuC,GAAjBE,EACxBb,GAAY,GACE,wBAAVG,GAnBVP,EAAU,MACVE,EAAU,MACVI,EAAW,GACXF,GAAY,GACZI,EAAU,wBACVE,GAAc,IAiBW,wBAAVH,GACPI,SAIA,GAAqB,GAAjBI,EAAoB,CACtBA,EAAgBC,SAASjB,GACzBkB,EAAgBD,SAASf,GACzBgB,GAAgC,EAChCF,EAAgB,GAChB,IAAMG,EAAkD,IAAjCC,OAAOJ,GAAeK,OAAtB,WAAyCL,GAAiBA,EAC3EM,EAAkD,IAAjCF,OAAOF,GAAeG,OAAtB,WAAyCH,GAAiBA,EACjFf,EAAUmB,GACVrB,EAAUkB,OAEP,CACLH,GAAgC,EAChC,IAAMG,EAAkD,IAAjCC,OAAOJ,GAAeK,OAAtB,WAAyCL,GAAiBA,EACjFf,EAAUkB,GAGdZ,GAAW,SAAAD,GAAO,OAAIA,EAAU,OAC/B,MAGE,kBAAMiB,cAAcT,MAC1B,CAACV,EAAUE,IAIZ,qBAAKkB,UAAWd,EAAa,iBAAmB,kBAAhD,SACA,sBAAKc,UAAU,YAAf,UACA,gDACA,6BAAKhB,IACH,sBAAKgB,UAAU,OAAf,UACE,sBAAMA,UAAU,SAAhB,SAA0BtB,IAC1B,qCACA,sBAAMsB,UAAU,SAAhB,SAA0BxB,OAE5B,sBAAKwB,UAAU,UAAf,UACE,wBAAQC,QAAS,kBAAMpB,GAAaD,IAAWoB,UAAU,QAAzD,SAAkEpB,EAAW,QAAS,UACtF,wBAAQqB,QAASb,EAAYY,UAAU,QAAvC,4BChFRE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.a164932d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst App = () => {\n\nconst [second, setSecond] = useState('00');\nconst [minute, setMinute] = useState('02');\nconst [isActive, setIsActive] = useState(false);\nconst [counter, setCounter] = useState(0);\nconst [header, setHeader] = useState('Let\\'s be productive!');\nconst [background, setBackground] = useState(true);\n\nfunction ResetTimer() {\n  setSecond('00');\n  setMinute('02');\n  setCounter(0);\n  setIsActive(false);\n  setHeader('Let\\'s be productive!');\n  setBackground(true);\n  }\n\n  function Pause() {\n    setSecond('00');\n    setMinute('01');\n    setCounter(0);\n    setIsActive(false);\n    setHeader('Now it\\'s break time!');\n    setBackground(false);\n    }\n\n  useEffect(() => {\n    let intervalId;\n\n    if (isActive) {\n      intervalId = setInterval(() => {\n        \n        let secondCounter = parseInt(second);\n        let minuteCounter = parseInt(minute);\n\n        if (secondCounter == 0 && minuteCounter == 0) {\n          setIsActive(false);\n          if (header == 'Let\\'s be productive!') {\n            Pause();\n          }   \n          else if (header == 'Now it\\'s break time!') {\n            ResetTimer();\n          }   \n        } \n          else {\n            if (secondCounter == 0) {\n              secondCounter = parseInt(second);\n              minuteCounter = parseInt(minute);\n              minuteCounter = minuteCounter - 1;\n              secondCounter = 59;\n              const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}`: secondCounter;\n              const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}`: minuteCounter;\n              setMinute(computedMinute);\n              setSecond(computedSecond);\n            }\n            else {\n            secondCounter = secondCounter - 1;\n            const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}`: secondCounter;\n            setSecond(computedSecond);\n          }\n      }\n        setCounter(counter => counter - 1);\n      }, 100)\n    }\n\n    return () => clearInterval(intervalId);\n  }, [isActive, counter])\n\n\n  return (\n    <div className={background ? 'background-red' : 'background-blue'}>\n    <div className=\"container\">\n    <h1>Pomodoro Timer</h1>\n    <h2>{header}</h2>\n      <div className=\"time\">\n        <span className=\"minute\">{minute}</span>\n        <span>:</span>\n        <span className=\"second\">{second}</span>\n      </div>\n      <div className=\"buttons\">\n        <button onClick={() => setIsActive(!isActive)} className=\"start\">{isActive ? \"Pause\": \"Start\"}</button>\n        <button onClick={ResetTimer} className=\"reset\">Reset</button>\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}